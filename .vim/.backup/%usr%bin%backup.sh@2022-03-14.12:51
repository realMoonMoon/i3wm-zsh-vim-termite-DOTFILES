#!/bin/bash


# check to see is git command line installed in this machine
IS_GIT_AVAILABLE="$(git --version)"
if [[ $IS_GIT_AVAILABLE == *"version"* ]]; then
  echo "Git is Available"
else
  echo "Git is not installed"
  exit 1
fi

cd $HOME

# Create dirs
mkdir -p BACKUP_DOTFILES/.config/termite
mkdir -p BACKUP_DOTFILES/.config/i3
mkdir -p BACKUP_DOTFILES/.config/i3status
mkdir -p BACKUP_DOTFILES/.ssh
mkdir -p BACKUP_DOTFILES/CERT
mkdir -p BACKUP_DOTFILES/work
# copy dotfiles

rm -rf BACKUP_DOTFILES/.oh-my-zsh/.git/objects/*
cp -r .vimrc .zshrc .zsh_history .Xresources .gitconfig BACKUP_DOTFILES 
cp -r .zsh_custom BACKUP_DOTFILES
cp -r .oh-my-zsh BACKUP_DOTFILES
cp -r .vim BACKUP_DOTFILES
cp -r work BACKUP_DOTFILES
cp -r Scripts BACKUP_DOTFILES
cp -r .ssh BACKUP_DOTFILES
cp -r CERT BACKUP_DOTFILES
cp -r work BACKUP_DOTFILES
cp .config/termite/config BACKUP_DOTFILES/.config/termite
cp .config/i3/config BACKUP_DOTFILES/.config/i3
cp /usr/bin/i3status.sh BACKUP_DOTFILES/bin
cp .config/i3status/config BACKUP_DOTFILES/.config/i3status

cd BACKUP_DOTFILES
git pull

# Check git status
gs="$(git status | grep -i "modified")"
echo "${gs}"

# If there is a ncp -r .zshrc .zsh_history .zsh_custom .Xresources .vimrc .vim .config/termite/config .config/i3/config .config/i3/i3status.sh .config/i3status/config .ssh BACKUP_DOTFILES change
if [[ $gs == *"modified"* ]]; then
  echo "push"
fi


# push to Github
for item in *; do git add $item; done
for item in .*; do git add $item; done
git commit -m "New backup `date +'%Y-%m-%d %H:%M:%S'`";
git push origin main
