#!/bin/bash
# check to see is git command line installed in this machine
IS_GIT_AVAILABLE="$(git --version)"
if [[ $IS_GIT_AVAILABLE == *"version"* ]]; then
  echo "Git is Available"
else
  echo "Git is not installed"
  exit 1
fi
# Alias
BACKUP_DIR="$HOME/BACKUP/i3wm-zsh-vim-termite-DOTFILES"

cd $HOME
# Create dirs
mkdir -p "$BACKUP_DIR"/.config/termite
mkdir -p "$BACKUP_DIR"/.config/i3
mkdir -p "$BACKUP_DIR"/.config/i3status
mkdir -p "$BACKUP_DIR"/.ssh
mkdir -p "$BACKUP_DIR"/.local/bin
mkdir -p "$BACKUP_DIR"/systemd
mkdir -p "$BACKUP_DIR"/usr/share/conky
# copy dotfiles
# Change what folders you would like to backup (like .bashrc instead of .zshrc)
cp .vimrc .zshrc .Xresources "$BACKUP_DIR" 
cp -r .zsh_custom "$BACKUP_DIR"
sudo cp -r .vim "$BACKUP_DIR"
# Remove all backups/swaps from .vim, they contain every single change I've made with vim
rm -rf "$BACKUP_DIR"/.vim/.swap
rm -rf "$BACKUP_DIR"/.vim/.backup
rm -rf "$BACKUP_DIR"/.vim/view
# Recreate the backup and swap folder so vim doesn't complain
mkdir -p "$BACKUP_DIR"/.vim/.backup
mkdir -p "$BACKUP_DIR"/.vim/.swap
mkdir -p "$BACKUP_DIR"/.vim/view
# Copy over .ssh/config and remove sensitive info
cp .ssh/config "$BACKUP_DIR"/.ssh
sed -i 's/HostName.*/HostName example.com/g' "$BACKUP_DIR"/.ssh/config
sed -i 's/Hostname.*/HostName example.com/g' "$BACKUP_DIR"/.ssh/config
sed -i 's/User.*/User example/g' "$BACKUP_DIR"/.ssh/config
cp -r /usr/share/conky "$BACKUP_DIR"/usr/share
cp -r .local/bin "$BACKUP_DIR"/.local
cp .config/termite/config "$BACKUP_DIR"/.config/termite
cp .config/i3/config "$BACKUP_DIR"/.config/i3
cp .config/i3status/config "$BACKUP_DIR"/.config/i3status
cp /etc/systemd/user/power.timer "$BACKUP_DIR"/systemd
cp /etc/systemd/user/power.service "$BACKUP_DIR"/systemd

cd "$BACKUP_DIR"
# Check git status
gs="$(git status | grep -Ei 'modified|deleted')"
echo "${gs}"

# Add and push to Github
git add --all
echo -n "Enter reason for commit [ENTER]: "
read reason_git
git commit -m "$reason_git - $(date +'%Y-%m-%d %H:%M:%S')"

git push origin main
