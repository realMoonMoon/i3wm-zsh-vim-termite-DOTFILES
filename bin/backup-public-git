#!/bin/bash
# check to see is git command line installed in this machine
IS_GIT_AVAILABLE="$(git --version)"
if [[ $IS_GIT_AVAILABLE == *"version"* ]]; then
  echo "Git is Available"
else
  echo "Git is not installed"
  exit 1
fi
cd $HOME
# Create dirs
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/termite
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/i3
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/i3status
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/.ssh
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/bin
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/systemd
mkdir -p BACKUP/i3wm-zsh-vim-termite-DOTFILES/usr/share/conky
# copy dotfiles
# Change what folders you would like to backup (like .bashrc instead of .zshrc)
cp .vimrc .zshrc .Xresources BACKUP/i3wm-zsh-vim-termite-DOTFILES 
cp -r .zsh_custom BACKUP/i3wm-zsh-vim-termite-DOTFILES
cp -r .vim BACKUP/i3wm-zsh-vim-termite-DOTFILES
# Remove all backups swaps
rm -rf BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/.swap
rm -rf BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/.backup
rm -rf BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/view
# Recreate the backup and swap folder
mkdir BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/.backup
mkdir BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/.swap
mkdir BACKUP/i3wm-zsh-vim-termite-DOTFILES/.vim/view
cp .ssh/config BACKUP/i3wm-zsh-vim-termite-DOTFILES/.ssh
cp -r /usr/share/conky BACKUP/i3wm-zsh-vim-termite-DOTFILES/usr/share
cp .config/termite/config BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/termite
cp .config/i3/config BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/i3
cp .config/i3status/config BACKUP/i3wm-zsh-vim-termite-DOTFILES/.config/i3status
cp /usr/bin/i3status.sh BACKUP/i3wm-zsh-vim-termite-DOTFILES/bin
cp /usr/bin/power.sh BACKUP/i3wm-zsh-vim-termite-DOTFILES/bin
cp /usr/bin/startup BACKUP/i3wm-zsh-vim-termite-DOTFILES/bin
cp /etc/systemd/user/power.timer BACKUP/i3wm-zsh-vim-termite-DOTFILES/systemd
cp /etc/systemd/user/power.service BACKUP/i3wm-zsh-vim-termite-DOTFILES/systemd
sed -i 's/HostName.*/HostName example.com/g' BACKUP/i3wm-zsh-vim-termite-DOTFILES/.ssh/config
sed -i 's/Hostname.*/HostName example.com/g' BACKUP/i3wm-zsh-vim-termite-DOTFILES/.ssh/config
sed -i 's/User.*/User example/g' BACKUP/i3wm-zsh-vim-termite-DOTFILES/.ssh/config

cd BACKUP/i3wm-zsh-vim-termite-DOTFILES

git pull

# Check git status
gs="$(git status | grep -i "modified")"
echo "${gs}"
# If there is a ncp -r .zshrc .zsh_history .zsh_custom .Xresources .vimrc .vim .config/termite/config .config/i3/config .config/i3/i3status.sh .config/i3status/config .ssh BACKUP/i3wm-zsh-vim-termite-DOTFILES change
if [[ $gs == *"modified"* ]]; then
  echo "push"
fi
# push to Github
#for item in *; do git add $item; done
#for item in .*; do git add $item; done
git add --all
git commit -m "New backup `date +'%Y-%m-%d %H:%M:%S'`";
git push origin main
